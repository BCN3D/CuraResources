{
    "id": "bcn3dsigma",
    "version": 2,
    "name": "Sigma",
    "inherits": "fdmprinter",
    "metadata": {
        "author": "BCN3D Technologies",
        "category": "BCN3D Technologies",
        "manufacturer": "BCN3D Technologies",
        "file_formats": "text/x-gcode",
        "platform": "bcn3dsigma_bed.stl",
        "platform_offset": [0, 0, 0],
        "has_machine_quality": true,
        "visible": true,
        "has_materials": true,
        "has_machine_materials": true,
        "has_variant_materials": true,
        "has_variants": true,
        "preferred_material": "*BCN3D_Filaments_PLA_Orange*",
        "preferred_variant": "*0.4mm_-_Brass*",
        "preferred_quality": "*Standard*",
        "variants_name": "Hotend",
        "machine_extruder_trains":
        {
            "0": "bcn3dsigma_extruder_left",
            "1": "bcn3dsigma_extruder_right"
        }
    },
    "overrides": {
        "machine_name": { "default_value": "Sigma" },
        "machine_acceleration": { "default_value": 2000 },
        "machine_max_jerk_xy": { "value": 15 },
        "machine_width": { "default_value": 210 },
        "machine_depth": { "default_value": 297 },
        "machine_height": { "default_value": 210 },
        "machine_disallowed_areas": { "value": "[] if print_mode == 'regular' else [[[-(abs(machine_head_with_fans_polygon[0][0]) + abs(machine_head_with_fans_polygon[2][0])) / 2, machine_depth / 2], [-(abs(machine_head_with_fans_polygon[0][0]) + abs(machine_head_with_fans_polygon[2][0])) / 2, -machine_depth / 2], [machine_width / 2, -machine_depth / 2], [machine_width / 2, machine_depth / 2]]] if print_mode == 'mirror' else [[[0, machine_depth / 2], [0, -machine_depth / 2], [machine_width / 2, -machine_depth / 2], [machine_width / 2, machine_depth / 2]]]" },
        "machine_heated_bed": { "default_value": true },
        "machine_extruder_count": { "default_value": 2 },
        "machine_center_is_zero": { "default_value": false },
        "machine_gcode_flavor": { "default_value": "RepRap (Marlin/Sprinter)" },
        "machine_head_with_fans_polygon":
        {
            "default_value":
            [
                [-27.8, 39.6],
                [-27.8, -58.8],
                [26.2, 39.6],
                [26.2, -58.8]
            ]
        },
        "gantry_height": { "default_value": 210 },
        "machine_max_feedrate_x": { "default_value": 200 },
        "machine_max_feedrate_y": { "default_value": 200 },
        "machine_max_feedrate_z": { "default_value": 12 },
        "machine_max_feedrate_e": { "default_value": 135 },
        "print_sequence": { "enabled": true },
        "layer_height": { "maximum_value": "0.75 * min(extruderValues('machine_nozzle_size'))" },
        "layer_height_0":
        {
            "maximum_value": "0.75 * min(extruderValues('machine_nozzle_size'))",
            "value": "min(extruderValues('machine_nozzle_size')) / 2"
        },
        "machine_start_gcode": { "default_value": ";Sigma ProGen 2.2.0 (Build 13CI1942)\n\nG21          ;metric values\nG90          ;absolute positioning\nM204 S2000   ;set default acceleration\nM205 X15 Y15 ;set default jerk\nM107         ;start with the fan off\nG28 X0 Y0    ;move X/Y to min endstops\nG28 Z0       ;move Z to min endstops\nG1 Z5 F200   ;safety Z axis movement\nT1           ;switch to the right extruder\nG92 E0       ;zero the extruded length\nT0           ;switch to the left extruder\nG92 E0       ;zero the extruded length\n{clone_cool_fan_gcode}\n{print_mode_gcode}\nG4 P1\nG4 P2\nG4 P3\n" },
        "machine_end_gcode": { "default_value": "M104 S0 T0               ;left extruder heater off\nM104 S0 T1               ;right extruder heater off\nM140 S0                  ;heated bed heater off\nM204 S2000               ;set default acceleration\nM205 X15 Y15             ;set default jerk\nG91                      ;relative positioning\nG1 Z+0.5 E-5 Y+10 F12000 ;move Z up a bit and retract filament\nG28 X0 Y0                ;move X/Y to min endstops so the head is out of the way\nM84                      ;steppers off\nG90                      ;absolute positioning\n" },
        "machine_nozzle_temp_enabled": { "value": true },
        "material_bed_temp_wait": { "value": true },
        "material_print_temp_wait": { "value": true },
        "line_width": { "value": "machine_nozzle_size" },
        "wall_line_width_x": { "value": "machine_nozzle_size" },
        "infill_line_width": { "value": "machine_nozzle_size" },
        "wall_line_width_0": { "value": "machine_nozzle_size * 0.875" },
        "support_line_width": { "value": "infill_line_width" },
        "top_bottom_pattern": { "value": "'zigzag'" },
        "skin_angles": { "value": "[0, 90]" },
        "wall_0_inset": { "value": "wall_line_width_x - wall_line_width_0" },
        "optimize_wall_printing_order": { "value": true },
        "xy_offset_layer_0": { "value": -0.1 },
        "z_seam_x": { "value": "int(machine_width/2.) if print_mode == 'regular' else int((machine_width/2.)/2.) if print_mode == 'duplication' else int((machine_width/2. - 54/2)/2.)" },
        "z_seam_y": { "value": "machine_depth" },
        "skin_overlap": { "value": "0" },
        "infill_sparse_thickness": { "value": "layer_height" },
        "infill_before_walls": { "value": true },
        "material_initial_print_temperature": { "value": "material_print_temperature + 0 if material_flow_dependent_temperature else material_print_temperature" },
        "material_final_print_temperature": { "value": "material_print_temperature + -2.5 if material_flow_dependent_temperature else material_print_temperature" },
        "material_extrusion_cool_down_speed": { "value": 1 },
        "retract_at_layer_change": { "value": false },
        "retraction_amount": { "maximum_value_warning": "machine_heat_zone_length" },
        "retraction_amount_multiplier": { "value": 1.5 },
        "retraction_speed": { "maximum_value_warning": "machine_max_feedrate_e" },
        "retraction_retract_speed":
        {
            "value": "min(retraction_speed, machine_max_feedrate_e)",
            "maximum_value_warning": "machine_max_feedrate_e"
        },
        "retraction_prime_speed": { "maximum_value_warning": "machine_max_feedrate_e" },
        "switch_extruder_retraction_speeds":
        {
            "value": "min(retraction_speed, machine_max_feedrate_e)",
            "maximum_value_warning": "machine_max_feedrate_e"
        },
        "switch_extruder_retraction_speed":
        {
            "value": "min(switch_extruder_retraction_speeds, machine_max_feedrate_e)",
            "maximum_value_warning": "machine_max_feedrate_e"
        },
        "switch_extruder_prime_speed":
        {
            "value": "min(retraction_speed * 0.25, machine_max_feedrate_e)",
            "maximum_value_warning": "machine_max_feedrate_e"
        },
        "retraction_extra_prime_amount": { "value": "coasting_volume if coasting_enable else 0" },
        "retraction_min_travel": { "value": "3.75 * machine_nozzle_size" },
        "switch_extruder_retraction_amount":
        {
            "value": "machine_heat_zone_length",
            "maximum_value_warning": "machine_heat_zone_length"
        },
        "speed_wall": { "value": "speed_print" },
        "speed_topbottom": { "value": "speed_wall_0" },
        "speed_support_interface": { "value": "speed_wall" },
        "speed_travel": { "value": "round(speed_print if magic_spiralize else 200)" },
        "speed_travel_layer_0": { "value": "round(speed_travel * speed_layer_0 / speed_print, 1)" },
        "skirt_brim_speed": { "value": "speed_infill * layer_height / layer_height_0 if adhesion_type == 'skirt' else speed_layer_0" },
        "speed_equalize_flow_enabled": { "value": true },
        "speed_equalize_flow_max": { "value": 100 },
        "acceleration_enabled": { "value": true },
        "acceleration_print": { "value": "machine_acceleration" },
        "acceleration_wall_x": { "value": "round(acceleration_print - (acceleration_print - acceleration_wall_0)/ 2.)" },
        "acceleration_topbottom": { "value": "acceleration_wall_0" },
        "acceleration_support": { "value": "acceleration_wall_x" },
        "acceleration_support_interface": { "value": "acceleration_topbottom" },
        "acceleration_travel": { "value": "acceleration_print if magic_spiralize else machine_acceleration" },
        "acceleration_layer_0": { "value": "acceleration_topbottom" },
        "jerk_enabled": { "value": true },
        "jerk_print": { "value": "machine_max_jerk_xy" },
        "jerk_wall": { "value": "jerk_print * 0.75" },
        "jerk_wall_0": { "value": "jerk_wall * 0.5" },
        "jerk_topbottom": { "value": "jerk_wall_0" },
        "jerk_support": { "value": "jerk_wall" },
        "jerk_support_interface": { "value": "jerk_topbottom" },
        "jerk_prime_tower": { "value": "jerk_wall" },
        "jerk_travel": { "value": "jerk_print if magic_spiralize else machine_max_jerk_xy" },
        "jerk_layer_0": { "value": "jerk_topbottom" },
        "start_layers_at_same_position":
        {
            "enabled": true,
            "value": false
        },
        "layer_start_x":
        {
            "enabled": "start_layers_at_same_position",
            "value": "machine_width/2"
        },
        "layer_start_y":
        {
            "enabled": "start_layers_at_same_position",
            "value": "machine_depth"
        },
        "travel_avoid_other_parts": { "value": true },
        "retraction_hop_enabled": { "value": true },
        "retraction_hop_only_when_collides": { "value": true },
        "retraction_combing": { "value": "'all'" },
        "retraction_hop": { "value": "2 * layer_height" },
        "hop_at_layer_change": { "value": "print_mode == 'regular'" },
        "retraction_hop_height_after_extruder_switch": { "value": 2 },
        "cool_fan_enabled": { "value": true },
        "clone_cool_fan":
        {
            "enabled": "print_mode == 'regular' and extruderValue(0, 'cool_fan_enabled') and extruderValue(1, 'cool_fan_enabled')",
            "value": "print_mode == 'regular' and extruderValue(0, 'cool_fan_enabled') and extruderValue(1, 'cool_fan_enabled')"
        },
        "cool_fan_full_at_height": { "value": "0 if adhesion_type == 'raft' else layer_height_0 + 4 * layer_height" },
        "cool_min_layer_time": { "value": 10 },
        "cool_lift_head": { "value": true },
        "support_z_distance": { "value": "max(layer_height, 0.15)" },
        "support_xy_overrides_z": { "value": "'xy_overrides_z'" },
        "support_xy_distance": { "value": "machine_nozzle_size * 2" },
        "support_join_distance": { "value": 10 },
        "support_offset": { "value": 1 },
        "support_infill_rate": { "value": 15 },
        "support_interface_enable": { "value": true },
        "support_interface_density": { "value": 75 },
        "support_interface_height": { "value": "5 * layer_height" },
        "support_interface_skip_height": { "value": "layer_height" },
        "support_interface_pattern": { "value": "'lines'" },
        "support_minimal_diameter": { "value": 1.0 },
        "support_conical_enabled": { "value": true },
        "extruder_prime_pos_y": { "value": "machine_depth" },
        "adhesion_type": { "value": "'skirt'" },
        "skirt_line_count": { "value": 2 },
        "skirt_brim_minimal_length": { "value": "round((20 * math.pi * (extruderValue(adhesion_extruder_nr, 'material_diameter') / 2) ** 2) / (extruderValue(adhesion_extruder_nr, 'machine_nozzle_size') * layer_height_0), 2)" },
        "raft_margin": { "value": 3 },
        "raft_airgap": { "value": "min(extruderValues('machine_nozzle_size')) * 0.55" },
        "raft_interface_thickness": { "value": "extruderValue(adhesion_extruder_nr, 'machine_nozzle_size') * 0.7" },
        "raft_interface_line_width": { "value": "line_width * 1.5" },
        "raft_base_thickness": { "value": "extruderValue(adhesion_extruder_nr, 'machine_nozzle_size') * 0.75" },
        "raft_base_line_width": { "value": "extruderValue(adhesion_extruder_nr, 'machine_nozzle_size') * 2.5" },
        "raft_base_line_spacing": { "value": "extruderValue(adhesion_extruder_nr, 'machine_nozzle_size') * 7.5" },
        "prime_tower_enable": { "value": false },
        "prime_tower_size": { "value": "max(25, round(math.sqrt(prime_tower_min_volume/layer_height), 2))" },
        "prime_tower_wipe_enabled": { "value": false },
        "dual_pre_wipe": { "value": false },
        "ooze_shield_enabled": { "value": false },
        "multiple_mesh_overlap": { "value": "0.375 * machine_nozzle_size - xy_offset" },
        "material_flow_dependent_temperature":
        {
            "enabled": true,
            "value": false
        },
        "coasting_enable": { "value": true },
        "coasting_min_volume": { "value": "coasting_volume * 4" },
        "support_conical_min_width": { "value": 10 },
        "skirt_brim_minimal_length": { "value": "round((20 * math.pi * (extruderValue(adhesion_extruder_nr, 'material_diameter') / 2) ** 2) / (extruderValue(adhesion_extruder_nr, 'machine_nozzle_size') * layer_height_0), 2)" },
        "purge_speed": { "value": "round(max(40 * (machine_nozzle_size / material_diameter) ** 2, machine_nozzle_size * layer_height * speed_infill / (math.pi * ((material_diameter / 2) ** 2))), 2)" },
        "smart_purge":
        {
            "enabled": "print_mode == 'regular'",
            "value": true
        },
        "avoid_grinding_filament":
        {
            "enabled": true,
            "value": true
        },
        "fix_tool_change_travel": { "value": true },
        "auto_apply_fixes": { "value": true }
    }
}